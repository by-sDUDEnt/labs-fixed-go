openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: Users
    description: User
  - name: Auth
    description: Auth

paths:
  /register:
    post:
      tags:
        - Auth
      summary: Register
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /login:
    post:
      tags:
        - Auth
      summary: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /user:
    get:
      tags:
        - Users
      summary: Get me
      operationId: getMe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /room:
    get:
      tags:
        - Rooms
      summary: Get all rooms
      operationId: getRooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
  /room/create:
    post:
      tags:
        - Rooms
      summary: Create room
      operationId: createRoom
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
  /room/{room_id}:
    get:
      tags:
        - Rooms
      summary: Get room
      operationId: getRoom
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
    post:
      tags:
        - Rooms
      summary: Join room
      operationId: joinRoom
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
    delete:
      tags:
        - Rooms
      summary: Leave room
      operationId: leaveRoom
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
  schemas:
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
    Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        game_type:
          $ref: '#/components/schemas/GameType'
        joined:
          type: integer
        max:
          type: integer
    GameType:
      type: string
      enum:
        - 'ConnectFour'
security:
  - bearerAuth: [ ]
